ABSTRACT CLASS NOTES
---*---*---
An abstract class can be considered as a blueprint for other classes.
___
It allows you to create a set of methods that must be created within any child classes built from the abstract class.
___
A class which contains one or more abstract methods is called an abstract class. An abstract class also cannot be directly instantiated.
___
An abstract method is a method that has a declaration but does not have an implementation.
___
While we are designing large functional units we use an abstract class, especially when we want to provide a common interface for different implementations of a component, we use an abstract class.
---*---*---
IMPLEMENTATION
___
By default, Python does not provide abstract classes. Python comes with a module that provides the base for defining Abstract Base classes(ABC) and that module name is ABC.
___
ABC works by decorating methods of the base class as abstract and then registering concrete classes as implementations of the abstract base. A method becomes abstract when decorated with the keyword @abstractmethod.
---*---*---
ANALOGY TO CONCEPTS
___
If a class represents a concept built from concretes, then an abstract class is a concept built from concepts, i.e. an abstraction on abstractions.